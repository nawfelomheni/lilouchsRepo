git workflow: Working Area(In Machine) > Staging Area(add) > LocalRepo(commit)
git config user.name/user.email
git init
git add .
git commit -m ''
git status
git  diff(between Working area and staging area: file must have an older version in Staging Area)
---
git diff --satged (between staging area and Local Repo: file must have an older version in Staging Area)
git rm file_name (removed from  Working Area(In Machine) > Staging Area(add): commit to remove from LocalRepo)
-- Connect to remote Repo --
$ git remote add origin remote_repository_URL
# Sets the new remote
$ git remote -v
# Verifies the new remote URL
-- set the origin/remote Repo --
git remote set-url origin git@github.com:nawfelomheni/Puber_v2.git
-- check remote before push/pull -- 
git fetch 
-- check diff between local repo and remote repo --
git diff master origin/master
-- remote contains a file that does not exist in the local repo: diff history: a merge is needed -- pull befor push always --
git pull --allow-unrelated-histories origin master
git push origin master
-- branches --
git branch branch_name : create a branch
git branch : list branches
git chekout branch_name: switch to the branch_name
---
git rm file_name
in master branch (git merge dev -m ''; then push)
--- revert an add or a commit
revert an add (move back from Staging Area to Working Area): git reset HEAD file_name
git reset HEAD~ (move back from LocalRepo to Working Area): revert the last Commit
---Discard last changes
git checkout -- file_name
git log --oneline --graph --decorate --all
-- rename and move --
git mv file_name /oldDirectory /newDirectory
git mv old_file_name new_file_name
-- git log -- 
git log --oneline --graph --decorate --all
git log --since="2 hours ago"
git log file_name
git show commit_id
-- Git Alias -- *******
git config --global alias.glogs "log --oneline --graph --decorate --all"
vi user_home_directory/.gitconfig OR vi ~/.gitcon

